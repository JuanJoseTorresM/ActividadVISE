name: Azure Continuous Delivery - Juan Abril

on:
  workflow_dispatch:
    inputs:
      IMAGE_REPOSITORY:
        description: 'Nombre del repositorio de la imagen (como en el ACR)'
        required: true
        default: 'api-vise'
      IMAGE_TAG:
        description: 'Tag de la imagen'
        required: true
        default: 'latest'
      AZURE_WEBAPP_NAME:
        description: 'Nombre del App Service en Azure'
        required: true
        default: 'appservice-juanabril'
      PORT:
        description: 'Puerto de la aplicación'
        required: true
        default: '443'

env:
  IMAGE_URL: juandavidabril.azurecr.io/${{ github.event.inputs.IMAGE_REPOSITORY }}:${{ github.event.inputs.IMAGE_TAG }}

jobs:
  build_and_push_image:
    name: 'Build and Push to ACR'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Iniciar sesión en Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: juandavidabril.azurecr.io
          username: juandavidabril
          password: ${{ secrets.ACR_PASSWORD_JUANB }}

      - name: Construir y subir imagen a ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.IMAGE_URL }}
          file: Dockerfile

  deploy:
    name: 'Deploy container a Azure App Service'
    runs-on: ubuntu-latest
    needs: build_and_push_image

    steps:
      - name: Desplegar en Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ github.event.inputs.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEB_APP_PUBLISH_PROFILE_JUANB }}
          images: ${{ env.IMAGE_URL }}

  test_deploy:
    name: 'Probar API desplegada'
    runs-on: ubuntu-latest
    needs: [build_and_push_image, deploy]

    steps:
      - name: Checkout archivo de pruebas (session.hurl)
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            session.hurl
          sparse-checkout-cone-mode: false

      - name: Instalar Hurl (herramienta para probar APIs)
        uses: gacts/install-hurl@v1

      - name: Probar API desplegada
        run: |
          hurl \
            --variable host=https://${{ github.event.inputs.AZURE_WEBAPP_NAME }}.azurewebsites.net:${{ github.event.inputs.PORT }} \
            --connect-timeout 20s \
            --error-format long \
            --verbose \
            --test session.hurl
